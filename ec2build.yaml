AWSTemplateFormatVersion: '2010-09-09'
Description: >
  CloudFormation template to create a single EC2 instance with standard best practices.

Parameters:
  InstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
    Description: EC2 instance type

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access

  SSHLocation:
    Description: The IP address range that can SSH to the EC2 instance (CIDR)
    Type: String
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3}\\.){3}\\d{1,3}/\\d{1,2}"
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.

Resources:

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation
      Tags:
        - Key: Name
          Value: EC2-SG

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      # To attach ebs blocks we can add something like this
      BlockDeviceMappings:
        - DeviceName: /dev/xvda  # Root volume
          Ebs:
            VolumeSize: 8
            VolumeType: gp2
        - DeviceName: /dev/xvdf  # Additional volume
          Ebs:
            VolumeSize: 20
            VolumeType: gp2
            DeleteOnTermination: true      
      SecurityGroupIds:
        - !Ref EC2SecurityGroup
      Tags:
        - Key: Name
          Value: MyEC2Instance

Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-0c02fb55956c7d316  # Amazon Linux 2 AMI in us-east-1
    us-west-2:
      AMI: ami-0892d3c7ee96c0bf7
    eu-west-1:
      AMI: ami-047bb4163c506cd98

Outputs:
  InstanceId:
    Description: EC2 Instance ID
    Value: !Ref EC2Instance

  PublicIP:
    Description: Public IP of the instance
    Value: !GetAtt EC2Instance.PublicIp
